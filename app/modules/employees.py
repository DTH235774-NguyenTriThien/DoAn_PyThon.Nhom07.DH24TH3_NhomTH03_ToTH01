# app/modules/employees.py
import tkinter as tk
from tkinter import ttk

# Import center_window
from app.utils.utils import clear_window, go_back, center_window 
from app.theme import setup_styles

# Import 4 tab con (m·ªói tab l√† 1 file ri√™ng)
from app.utils.employee import tab_info, tab_shift, tab_attendance, tab_salary


def show_employee_module(root, username=None, role=None):
    """Giao di·ªán qu·∫£n l√Ω nh√¢n vi√™n (phi√™n b·∫£n m·ªü r·ªông v·ªõi 4 tab)"""
    # === C·∫•u h√¨nh chung ===
    clear_window(root)
    setup_styles()

    root.title("üìã Qu·∫£n l√Ω nh√¢n vi√™n - Phi√™n b·∫£n m·ªü r·ªông")
    root.configure(bg="#f5e6ca")

    # =========================================================
    # LOGIC T·ª∞ ƒê·ªòNG THAY ƒê·ªîI K√çCH TH∆Ø·ªöC
    # =========================================================
    
    # K√≠ch th∆∞·ªõc chu·∫©n (cho Tab 1, 2)
    DEFAULT_WIDTH = 1200
    DEFAULT_MIN_WIDTH = 1000
    
    # K√≠ch th∆∞·ªõc r·ªông (cho Tab 3: Ch·∫•m c√¥ng, Tab 4: B·∫£ng l∆∞∆°ng)
    WIDE_WIDTH = 1400 
    WIDE_MIN_WIDTH = 1200
    
    HEIGHT = 600

    # ƒê·∫∑t k√≠ch th∆∞·ªõc m·∫∑c ƒë·ªãnh ban ƒë·∫ßu (cho Tab 1)
    center_window(root, DEFAULT_WIDTH, HEIGHT, offset_y=-60)
    root.minsize(DEFAULT_MIN_WIDTH, 550)

    # === HEADER ===
    header = tk.Frame(root, bg="#3e2723", height=70)
    header.pack(fill="x")
    tk.Label(
        header,
        text="üë®‚Äçüíº H·ªÜ TH·ªêNG QU·∫¢N L√ù NH√ÇN VI√äN",
        bg="#3e2723",
        fg="white",
        font=("Segoe UI", 18, "bold")
    ).pack(pady=15)

    # === NOTEBOOK (4 TAB) ===
    notebook_frame = tk.Frame(root, bg="#f5e6ca")
    notebook_frame.pack(fill="both", expand=True, padx=10, pady=10)

    notebook = ttk.Notebook(notebook_frame)
    notebook.pack(fill="both", expand=True)
    
    # === H√ÄM X·ª¨ L√ù S·ª∞ KI·ªÜN CHUY·ªÇN TAB ===
    def on_tab_changed(event):
        """H√†m n√†y ƒë∆∞·ª£c g·ªçi m·ªói khi ng∆∞·ªùi d√πng nh·∫•p v√†o tab m·ªõi"""
        try:
            selected_tab_index = notebook.index(notebook.select())
            
            # Tab 2 (Ch·∫•m c√¥ng) ho·∫∑c Tab 3 (B·∫£ng l∆∞∆°ng)
            if selected_tab_index == 2 or selected_tab_index == 3:
                # C·∫ßn c·ª≠a s·ªï r·ªông
                if root.winfo_width() != WIDE_WIDTH:
                    # G·ªçi h√†m center_window ƒë·ªÉ ƒë·∫∑t k√≠ch th∆∞·ªõc M·ªöI
                    center_window(root, WIDE_WIDTH, HEIGHT, offset_y=-60)
                    root.minsize(WIDE_MIN_WIDTH, 550)
            else:
                # Tab 0 (Th√¥ng tin) ho·∫∑c Tab 1 (Ca l√†m)
                # C·∫ßn c·ª≠a s·ªï chu·∫©n
                if root.winfo_width() != DEFAULT_WIDTH:
                    # G·ªçi h√†m center_window ƒë·ªÉ ƒë·∫∑t k√≠ch th∆∞·ªõc M·ªöI
                    center_window(root, DEFAULT_WIDTH, HEIGHT, offset_y=-60)
                    root.minsize(DEFAULT_MIN_WIDTH, 550)
        except Exception as e:
            # X·ª≠ l√Ω n·∫øu c·ª≠a s·ªï ƒë√£ b·ªã ƒë√≥ng
            print(f"L·ªói khi ƒë·ªïi tab: {e}")

    # === T·∫†O 4 TAB ===
    tab1 = tk.Frame(notebook, bg="#f5e6ca")  # Th√¥ng tin nh√¢n vi√™n
    tab2 = tk.Frame(notebook, bg="#f5e6ca")  # Ca l√†m vi·ªác
    tab3 = tk.Frame(notebook, bg="#f5e6ca")  # Ch·∫•m c√¥ng
    tab4 = tk.Frame(notebook, bg="#f5e6ca")  # B·∫£ng l∆∞∆°ng

    notebook.add(tab1, text="üìã Th√¥ng tin nh√¢n vi√™n")
    notebook.add(tab2, text="üïê Ca l√†m vi·ªác")
    notebook.add(tab3, text="üìÖ Ch·∫•m c√¥ng")
    notebook.add(tab4, text="üí∞ B·∫£ng l∆∞∆°ng")

    # === G·ªåI C√ÅC TAB CON ===
    tab_info.build_tab(tab1, root, username, role)
    tab_shift.build_tab(tab2, root, username, role)
    tab_attendance.build_tab(tab3, root, username, role)
    tab_salary.build_tab(tab4,root, username, role)

    # === M·∫∏O: ƒê·∫∑t tab ƒë·∫ßu ti√™n l√†m m·∫∑c ƒë·ªãnh ===
    notebook.select(tab1)
    
    # =========================================================
    #           G·∫ÆN S·ª∞ KI·ªÜN V√ÄO NOTEBOOK
    # =========================================================
    # D√≤ng n√†y s·∫Ω k√≠ch ho·∫°t h√†m 'on_tab_changed' m·ªói khi b·∫°n ƒë·ªïi tab
    notebook.bind("<<NotebookTabChanged>>", on_tab_changed)


# Ch·ªâ d√πng khi ch·∫°y ƒë·ªôc l·∫≠p ƒë·ªÉ test UI (kh√¥ng c·∫ßn mainmenu)
if __name__ == "__main__":
    from app.db import conn
    root = tk.Tk()
    show_employee_module(root, username="admin", role="Admin")
    root.mainloop()