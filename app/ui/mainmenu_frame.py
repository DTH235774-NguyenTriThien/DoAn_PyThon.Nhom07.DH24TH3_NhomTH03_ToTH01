# app/ui/mainmenu_frame.py
import tkinter as tk
from tkinter import ttk
from app.utils.utils import clear_window, center_window 

def show_main_menu(root, display_name, role, on_exit_callback=None):
    clear_window(root)

    # ====== WINDOW CONFIG ======
    root.title("‚òï H·ªá th·ªëng qu·∫£n l√Ω c√† ph√™ - Main Menu")
    root.configure(bg="#f5e6ca")
    # S·ª¨A 1: M·ªü r·ªông c·ª≠a s·ªï ch√≠nh ƒë·ªÉ ch·ª©a 4 n√∫t
    center_window(root, 1100, 600) 
    root.minsize(1000, 550)

    # ====== HEADER ======
    header = tk.Frame(root, bg="#4b2e05", height=80)
    header.pack(fill="x")
    tk.Label(
        header,
        text=f"‚òï Xin ch√†o {display_name} ({role}) ‚òï", 
        bg="#4b2e05",
        fg="white",
        font=("Segoe UI", 16, "bold")
    ).pack(pady=20)

    # ====== MAIN CONTENT ======
    main = tk.Frame(root, bg="#f5e6ca")
    main.pack(expand=True, pady=30, fill="both")

    # ====== STYLE (Gi·ªØ nguy√™n) ======
    style = ttk.Style()
    style.theme_use("clam")
    style.configure("Coffee.TButton", font=("Segoe UI", 13, "bold"), padding=15, relief="flat", background="#a47148", foreground="white", borderwidth=0)
    style.map("Coffee.TButton", background=[("active", "#8b5e34"), ("pressed", "#6f4518")], foreground=[("active", "white")])
    style.configure("Logout.TButton", font=("Segoe UI", 13, "bold"), padding=15, relief="flat", background="#c75c5c", foreground="white", borderwidth=0)
    style.map("Logout.TButton", background=[("active", "#a94442")])

    # ====== B·ªê C·ª§C N√öT (S·ª¨A 2: Layout 4-3-1) ======
    btn_container = tk.Frame(main, bg="#f5e6ca")
    btn_container.pack(expand=True)
    top_row_frame = tk.Frame(btn_container, bg="#f5e6ca")
    top_row_frame.pack(pady=15)
    bottom_row_frame = tk.Frame(btn_container, bg="#f5e6ca")
    bottom_row_frame.pack(pady=15)

    # S·ª¨A 3: Th√™m n√∫t "Qu·∫£n l√Ω C√¥ng th·ª©c" (T·ªïng 7 n√∫t)
    buttons = [
        ("üë• Qu·∫£n l√Ω nh√¢n vi√™n", lambda: open_employee_module(root, on_exit_callback)),
        ("ü•§ Qu·∫£n l√Ω ƒë·ªì u·ªëng", lambda: from_app_open_drinks(root, on_exit_callback)),
        ("üì¶ Qu·∫£n l√Ω Kho", lambda: from_app_open_ingredients(root, on_exit_callback)),
        ("üìú Qu·∫£n l√Ω C√¥ng th·ª©c", lambda: from_app_open_recipes(root, on_exit_callback)), # <-- N√öT M·ªöI
        ("üßæ Qu·∫£n l√Ω h√≥a ƒë∆°n", lambda: from_app_open_invoices(root, on_exit_callback)),
        ("üí≥ Kh√°ch h√†ng", lambda: from_app_open_customers(root, on_exit_callback)),
        ("üìä Th·ªëng k√™", lambda: from_app_open_reports(root, on_exit_callback)),
    ]

    # Th√™m 4 n√∫t ƒë·∫ßu ti√™n v√†o H√†ng 1
    for i in range(4): # <-- S·ª¨A 4: ƒê·ªïi (3) th√†nh (4)
        text, cmd = buttons[i]
        ttk.Button(
            top_row_frame,
            text=text,
            style="Coffee.TButton",
            width=25,
            command=cmd
        ).pack(side="left", padx=15)

    # Th√™m 3 n√∫t cu·ªëi v√†o H√†ng 2
    for i in range(4, 7): # <-- S·ª¨A 5: ƒê·ªïi (3, 6) th√†nh (4, 7)
        text, cmd = buttons[i]
        ttk.Button(
            bottom_row_frame,
            text=text,
            style="Coffee.TButton",
            width=25,
            command=cmd
        ).pack(side="left", padx=15)

    # ====== LOGOUT BUTTON (H√†ng 3, 1 n√∫t) ======
    ttk.Button(
        btn_container, 
        text="üö™ ƒêƒÉng xu·∫•t",
        style="Logout.TButton",
        width=25,
        command=lambda: go_back_to_login(root, on_exit_callback),
    ).pack(pady=25) 

# ----------- HELPER FUNCTIONS (C·∫¨P NH·∫¨T ƒê·ªÇ TRUY·ªÄN CALLBACK) --------------

def open_employee_module(root, on_exit_callback=None):
    from app.modules.employees import show_employee_module
    show_employee_module(root) # (TODO: C·∫ßn refactor)

def go_back_to_login(root, on_exit_callback=None):
    from app.ui.login_frame import show_login
    show_login(root, on_exit_callback=on_exit_callback)

def from_app_open_drinks(root, on_exit_callback=None):
    from app.modules.drinks import show_drinks_module
    show_drinks_module(root) # (TODO: C·∫ßn refactor)

def from_app_open_invoices(root, on_exit_callback=None):
    from app.modules.invoices import show_invoices_module
    show_invoices_module(root, on_exit_callback=on_exit_callback)

def from_app_open_customers(root, on_exit_callback=None):
    from app.modules.customers import show_customers_module
    show_customers_module(root) # (TODO: C·∫ßn refactor)

def from_app_open_reports(root, on_exit_callback=None):
    from app.modules.reports import show_reports_module
    show_reports_module(root, on_exit_callback=on_exit_callback)

def from_app_open_ingredients(root, on_exit_callback=None):
    from app.modules.ingredients import show_ingredients_module
    show_ingredients_module(root) # (TODO: C·∫ßn refactor)

# S·ª¨A 6: Th√™m helper cho module m·ªõi
def from_app_open_recipes(root, on_exit_callback=None):
    from app.modules.recipes import show_recipes_module
    show_recipes_module(root) # (TODO: C·∫ßn refactor)